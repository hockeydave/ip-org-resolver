
buildscript {
    ext.kotlin_version = '1.8.10'
    ext.ktor_version = '1.6.8'
    ext.mockk_version = '1.13.4'

    repositories {
        maven {
            url "https://mvnrepository.com/artifact/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        gradlePluginPortal()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.2.0'
    }
}


plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version" apply false
    id 'java-library'
    id "java-gradle-plugin"
}


subprojects {
   // if (name == "applications" || name == "components") return

    group "io.collective"

    apply plugin: 'kotlin'
    apply plugin: 'java'

    defaultTasks "clean", "build"

    repositories {
        mavenCentral()
        google()
    }


    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        implementation "io.ktor:ktor-server-core:$ktor_version"
        implementation "io.ktor:ktor-server-netty:$ktor_version"
        implementation "io.ktor:ktor-html-builder:$ktor_version"


        implementation "org.slf4j:slf4j-api:2.0.5"
        implementation "org.slf4j:slf4j-simple:2.0.5"
        implementation "ch.qos.logback:logback-classic:1.2.3"

        implementation "com.fasterxml.jackson.core:jackson-core:2.14.2"
        implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.14.2"
        implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.14.2"

        implementation 'commons-net:commons-net:3.9.0'
        implementation 'com.zaxxer:HikariCP:3.2.0'

        implementation 'com.google.guava:guava:31.1-jre'

        testImplementation "io.ktor:ktor-server-test-host:$ktor_version"
        testImplementation group: 'junit', name: 'junit', version: '4.12'
        testImplementation "io.mockk:mockk:$mockk_version"
        testImplementation "org.mockito:mockito-core:3.3.0"
        testImplementation "com.nhaarman:mockito-kotlin:1.6.0"
        testImplementation "org.awaitility:awaitility:4.0.3"
        testImplementation("org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version")
    }

    kotlin {
        jvmToolchain {
            languageVersion.set(JavaLanguageVersion.of(11))
        }
    }

    sourceSets {
        main.kotlin.srcDirs += "src/main/kotlin"
        main.java.srcDirs += "src/main/java"
        main.resources.srcDirs += "src/main/resources"

        test.kotlin.srcDirs += "src/test/kotlin"
        test.java.srcDirs += "src/test/java"
        test.resources.srcDirs += "src/test/resources"
    }

    /* needed for heroku */
    task stage(dependsOn: ['build', 'clean'])
    build { mustRunAfter "clean" }
    gradle.taskGraph.whenReady {
        taskGraph ->
            if (taskGraph.hasTask(stage)) {
                test.enabled = false
            }
    }

}
tasks.withType(Test).configureEach {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}



tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}





